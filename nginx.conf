# Detemine the formatting of the log that will be print to the access.log file
log_format testlog '$remote_addr - $remote_user [$time_local] '
               '"$request" $status $bytes_sent '
               '"$http_referer" $http_user_agent $request_body $gzip_ratio '
               '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

# Determine the upstream of three services
upstream service-one {
    # this will point to the Docker Container DNS which is the container name and the port it exposes
    server service-one:8080;
}

upstream service-two {
    server service-two:8081;
}

upstream service-three {
    server service-three:8082;
}


# Write the reverse proxy
server {
    # Determine where to output the log
    access_log /var/log/nginx/access.log;
    # expose port 80
    listen 80;

    # if the root route get access it will return the default nginx html page
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # Here we do the reverse proxy with the keyword "proxy_pass" and pass the upstream as the first argument
    # do not forget to set the proxy header, here I will use the common header instructed by the documentation
    location /one {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        # do not forget to include the scheme which is http
		proxy_pass http://service-one;
	}

    # do the same with service two and service three
    location /two {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://service-two;
	}

    location /three {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://service-three;
	}
}